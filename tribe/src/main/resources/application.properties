spring.application.name=tribe
spring.profiles.active=${SPRING_PROFILES_ACTIVE:development}

spring.datasource.url=${DATABASE_URL:jdbc:h2:mem:devdb}
spring.datasource.username=${DATABASE_USERNAME:sa}
spring.datasource.password=${DATABASE_PASSWORD:}
spring.datasource.driver-class-name=${DATABASE_DRIVER:org.h2.Driver}
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=never
# spring.sql.init.data-locations=classpath:data.sql  # Disabled - using DataInitializer instead

# Disable Flyway to avoid circular dependency issues
spring.flyway.enabled=false

spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:create-drop}
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

server.port=8080

# JWT Configuration - MUST be provided via environment variable
# For development, set: export JWT_SECRET=$(openssl rand -base64 32)
# For Kubernetes, use: kubectl create secret generic jwt-secret --from-literal=JWT_SECRET=$(openssl rand -base64 32)
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=86400000

# Use Camunda Platform 8 test container for integration tests
camunda.client.mode=self-managed
camunda.client.zeebe.gateway-url=${ZEEBE_GATEWAY:127.0.0.1:26500}
camunda.client.zeebe.security.plaintext=${ZEEBE_PLAINTEXT:true}
camunda.client.startup.enabled=${CAMUNDA_STARTUP_ENABLED:true}
camunda.client.startup.deploy-resources[0]=classpath:loan-approval.bpmn

# CORS configuration for local development
app.cors.allowed-origins=http://localhost:4200
