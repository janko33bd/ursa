# Multi-stage build for Angular application
FROM node:18-alpine AS build

WORKDIR /app

# Copy package files first for better caching
COPY frontend/package*.json ./

# Install dependencies (including dev for build)
RUN npm install --ignore-scripts

# Copy source code
COPY frontend/ .

# Build the application for production
RUN npm run build -- --configuration production

# Production stage with nginx
FROM nginx:alpine

# Remove default nginx config and copy our custom config
RUN rm /etc/nginx/conf.d/default.conf
COPY docker/nginx.conf /etc/nginx/nginx.conf

# Clear nginx html directory and copy built application
RUN rm -rf /usr/share/nginx/html/*
COPY --from=build /app/dist/frontend/browser /usr/share/nginx/html/

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]